require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/trends", type: :request do
  # This should return the minimal set of values that should be in the headers
  # in order to pass any filters (e.g. authentication) defined in
  # TrendsController, or in your router and rack
  # middleware. Be sure to keep this updated too.
  let(:valid_headers) {
    { 'Accept' => 'application/json' }
  }

  let(:product) { create(:product) }
  let!(:trends) { create_list(:trend, 3, product: product) }

  describe "GET /products/:product_id/trends" do
    context "when the product exists" do
      it "returns a list of trends for the product and matches the JSON schema" do
        get product_trends_url(product), headers: valid_headers, as: :json

        expect(response).to have_http_status(:success)
        expect(json_response.size).to eq(3)
        expect(response).to match_response_schema('trends/index')
      end
    end

    context "when the product does not exist" do
      it "returns a 404 status" do
        get product_trends_path(product_id: 99999), headers: valid_headers, as: :json

        expect(response).to have_http_status(:not_found)
      end
    end
  end
end
